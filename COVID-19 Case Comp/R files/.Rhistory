ids <- which(apply(!is.na(data[,..mobility]),1,all))
pca_mobility <- princomp(data[ids,..mobility], cor = T)
plot(pca_mobility)
pca_mobility$loadings
names(data)
pca_mobility$sdev^2
pca_mobility$sdev^2 / (sum(pca_mobility$sdev^2))
cumsum(pca_mobility$sdev^2 / (sum(pca_mobility$sdev^2)))
# Formula
#formula <- rsf7 ~ s(new_rs, k = 6) + s(rsp2, k = 6) + s(rsp4, k = 6) + s(rsp6, k = 6) +
#    s(rsp7, k = 6) + population:pca1 + population:pca2 + region
formula = rsf7 ~ s(new_rs, k = 3) + region:pca1 + region:pca2
data[ids, pca1 := pca_mobility$scores[,1]]
data[ids, pca2 := pca_mobility$scores[,2]]
# Formula
#formula <- rsf7 ~ s(new_rs, k = 6) + s(rsp2, k = 6) + s(rsp4, k = 6) + s(rsp6, k = 6) +
#    s(rsp7, k = 6) + population:pca1 + population:pca2 + region
formula = rsf7 ~ s(new_rs, k = 3) + region:pca1 + region:pca2
id <- which(apply(!is.na(cbind(data[,..mobility],data[,..cases])), 1, all))
data2 <- data[id,]
# Model
nb_mod <- gam(formula, data2, family = nb(link="identity"))
summary(nb_mod)
# Formula
#formula <- rsf7 ~ s(new_rs, k = 6) + s(rsp2, k = 6) + s(rsp4, k = 6) + s(rsp6, k = 6) +
#    s(rsp7, k = 6) + population:pca1 + population:pca2 + region
formula = rsf7 ~ s(new_rs, k = 3) + population:pca1 + population:pca2 + region
id <- which(apply(!is.na(cbind(data[,..mobility],data[,..cases])), 1, all))
data2 <- data[id,]
# Model
nb_mod <- gam(formula, data2, family = nb(link="identity"))
summary(nb_mod)
# Formula
#formula <- rsf7 ~ s(new_rs, k = 6) + s(rsp2, k = 6) + s(rsp4, k = 6) + s(rsp6, k = 6) +
#    s(rsp7, k = 6) + population:pca1 + population:pca2 + region
formula = rsf7 ~ s(new_rs, k = 3) + region:pca1 + region:pca2
id <- which(apply(!is.na(cbind(data[,..mobility],data[,..cases])), 1, all))
data2 <- data[id,]
# Model
nb_mod <- gam(formula, data2, family = nb(link="identity"))
summary(nb_mod)
library(ggplot2)
library(data.table)
library(mgcv)
library(dplyr)
path = file.path("usdata.csv")
path = file.path("usdata.csv")
usdata = read.csv(path)
usdata$date = as.Date(usdata$date)
colnames(usdata)[9] = "new_cases" # change colname
# set negative case counts to average of adjacent counts
count = 0
for (i in 1:(nrow(usdata)-1)) {
if (usdata$new_cases[i] < 0) {
usdata$new_cases[i] = (usdata$new_cases[i-1] + usdata$new_cases[i+1]) / 2
count = count + 1
}
}
# rename state variable to region
colnames(usdata)[1] = "region"
colnames(usdata)
# create 7-day rolling sum of new cases
rs7 = function(x) {
rs = rep(NA, length(x))
j = 1
while(is.na(x[j]) & j < length(x)) {
j = j + 1
}
for (i in (j + 6): length(x)) {
rs[i] = sum(x[(i-6): i], rm.na = T)
}
return(rs)
}
# helper function for rolling sums
shift_n = function(x, n) {
m = length(x)
shifted_x = rep(NA, m)
if (n > 0) {
shifted_x[1:(m - n)] = x[(n+1):m]
} else {
shifted_x[-1:n] = x[1:(m+n)]
}
return(shifted_x)
}
# Create lag variables
usdata = usdata %>%
group_by(region) %>%
mutate(new_rs = rs7(new_cases),
rsf7 = rs7(shift_n(new_cases, 7)), # changed to 14 day !!!!!!!!!!!
rsp1 = rs7(shift_n(new_cases, -1)),
rsp2 = rs7(shift_n(new_cases, -2)),
rsp3 = rs7(shift_n(new_cases, -3)),
rsp4 = rs7(shift_n(new_cases, -4)),
rsp5 = rs7(shift_n(new_cases, -5)),
rsp6 = rs7(shift_n(new_cases, -6)),
rsp7 = rs7(shift_n(new_cases, -7)))
usdata = data.table(usdata)
# PCA
names(usdata)
mobility <- names(usdata)[3:8]
cases <- grep("rs", names(usdata), value=T)
ids <- which(apply(!is.na(usdata[,..mobility]),1,all))
pca_mobility <- princomp(usdata[ids,..mobility], cor = T)
plot(pca_mobility)
pca_mobility$loadings
usdata[ids, pca1 := pca_mobility$scores[,1]]
usdata[ids, pca2 := pca_mobility$scores[,2]]
# Formula (note: no population density variable)
#formula <- rsf7 ~ s(new_rs, bs = 'cr', k = 6) + s(rsp2, bs = 'cr', k = 6) + s(rsp4, bs = 'cr', k = 6) + s(rsp6, bs = 'cr', k = 6) +
#    s(rsp7, bs = 'cr', k = 6) + population:pca1 + population:pca2 + region
formula = rsf7 ~ s(new_rs, k = 3) + region:pca1 + region:pca2
id <- which(apply(!is.na(cbind(usdata[,..mobility],usdata[,..cases])), 1, all))
usdata2 <- usdata[id,]
usdata3 = sample_n(usdata2, 3000) # to help debug GAM training
# Model
us_nb_mod <- gam(formula, usdata3, family = nb(link="identity"))
summary(us_nb_mod)
# check diagnostics
gam.check(us_nb_mod)
# plot smooth effects
plot(nb_mod, residuals = T)
# check diagnostics
gam.check(nb_mod)
# Formula
#formula <- rsf7 ~ s(new_rs, k = 6) + s(rsp2, k = 6) + s(rsp4, k = 6) + s(rsp6, k = 6) +
#    s(rsp7, k = 6) + population:pca1 + population:pca2 + region
formula = rsf7 ~ s(new_rs, k = 3) + s(rsp2, k = 3) + s(rsp4, k = 3) + s(rsp6, k = 3) +
s(rsp7, k = 3) + region:pca1 + region:pca2
id <- which(apply(!is.na(cbind(data[,..mobility],data[,..cases])), 1, all))
data2 <- data[id,]
# Model
nb_mod <- gam(formula, data2, family = nb(link="identity"))
summary(nb_mod)
library(ggplot2)
library(data.table)
library(mgcv)
library(dplyr)
path = file.path("usdata.csv")
usdata = read.csv(path)
usdata$date = as.Date(usdata$date)
colnames(usdata)[9] = "new_cases" # change colname
# set negative case counts to average of adjacent counts
count = 0
for (i in 1:(nrow(usdata)-1)) {
if (usdata$new_cases[i] < 0) {
usdata$new_cases[i] = (usdata$new_cases[i-1] + usdata$new_cases[i+1]) / 2
count = count + 1
}
}
# rename state variable to region
colnames(usdata)[1] = "region"
colnames(usdata)
# create 7-day rolling sum of new cases
rs7 = function(x) {
rs = rep(NA, length(x))
j = 1
while(is.na(x[j]) & j < length(x)) {
j = j + 1
}
for (i in (j + 6): length(x)) {
rs[i] = sum(x[(i-6): i], rm.na = T)
}
return(rs)
}
# helper function for rolling sums
shift_n = function(x, n) {
m = length(x)
shifted_x = rep(NA, m)
if (n > 0) {
shifted_x[1:(m - n)] = x[(n+1):m]
} else {
shifted_x[-1:n] = x[1:(m+n)]
}
return(shifted_x)
}
# Create lag variables
usdata = usdata %>%
group_by(region) %>%
mutate(new_rs = rs7(new_cases),
rsf7 = rs7(shift_n(new_cases, 7)), # changed to 14 day !!!!!!!!!!!
rsp1 = rs7(shift_n(new_cases, -1)),
rsp2 = rs7(shift_n(new_cases, -2)),
rsp3 = rs7(shift_n(new_cases, -3)),
rsp4 = rs7(shift_n(new_cases, -4)),
rsp5 = rs7(shift_n(new_cases, -5)),
rsp6 = rs7(shift_n(new_cases, -6)),
rsp7 = rs7(shift_n(new_cases, -7)))
usdata = data.table(usdata)
# PCA
names(usdata)
mobility <- names(usdata)[3:8]
cases <- grep("rs", names(usdata), value=T)
ids <- which(apply(!is.na(usdata[,..mobility]),1,all))
pca_mobility <- princomp(usdata[ids,..mobility], cor = T)
plot(pca_mobility)
pca_mobility$loadings
usdata[ids, pca1 := pca_mobility$scores[,1]]
usdata[ids, pca2 := pca_mobility$scores[,2]]
# Formula (note: no population density variable)
#formula <- rsf7 ~ s(new_rs, bs = 'cr', k = 6) + s(rsp2, bs = 'cr', k = 6) + s(rsp4, bs = 'cr', k = 6) + s(rsp6, bs = 'cr', k = 6) +
#    s(rsp7, bs = 'cr', k = 6) + population:pca1 + population:pca2 + region
formula = rsf7 ~ s(new_rs, k = 3) + s(rsp2, k = 3) + s(rsp4, k = 3) + s(rsp6, k = 3) +
s(rsp7, k = 3) + region:pca1 + region:pca2
id <- which(apply(!is.na(cbind(usdata[,..mobility],usdata[,..cases])), 1, all))
usdata2 <- usdata[id,]
usdata3 = sample_n(usdata2, 3000) # to help debug GAM training
# Model
us_nb_mod <- gam(formula, usdata3, family = nb(link="identity"))
summary(us_nb_mod)
library(ggplot2)
library(data.table)
library(mgcv)
library(dplyr)
path = file.path("full_data_case_rep.csv")
data = fread(path)
data$date = as.Date(data$date)
# PCA
names(data)
mobility <- names(data)[9:14]
names(data)
mobility
cases <- c("rsf7", grep("rsp", names(data), value=T))
ids <- which(apply(!is.na(data[,..mobility]),1,all))
pca_mobility <- princomp(data[ids,..mobility], cor = T)
plot(pca_mobility)
pca_mobility$loadings
cumsum(pca_mobility$sdev/sum(pca_mobility$sdev))
cumsum(pca_mobility$sdev^2/sum(pca_mobility$sdev^2))
data[ids, pca1 := pca_mobility$scores[,1]]
data[ids, pca2 := pca_mobility$scores[,2]]
data[ids, pca3 := pca_mobility$scores[,3]]
data[ids, pca4 := pca_mobility$scores[,4]]
data2 <- data
# Formula (note: no population density variable)
formula <- rsf7 ~ log(new_rs):region + (pca1 + pca2 + pca3)
id <- which(apply(!is.na(cbind(data2[,..mobility],data2[,..cases])), 1, all) &
data2[,rsf7 > 0] & data2[,new_rs > 0])
data4 <- data2[id,]
# Model
nb_mod <- gam(formula, data4, family = nb(link="log"))
summary(nb_mod)
gam.check(nb_mod)
# Model
nb_mod <- gam(formula, data4, family = poisson(link="log"))
# Formula (note: no population density variable)
formula <- rsf7 ~ log(new_rs):region + (pca1 + pca2 + pca3)
id <- which(apply(!is.na(cbind(data2[,..mobility],data2[,..cases])), 1, all) &
data2[,rsf7 > 0] & data2[,new_rs > 0])
data4 <- data2[id,]
library(ggplot2)
library(data.table)
library(mgcv)
library(dplyr)
path = file.path("full_data_case_rep.csv")
data = fread(path)
data$date = as.Date(data$date)
# create 7-day rolling sum of new cases
rs7 = function(x) {
rs = rep(NA, length(x))
j = 1
while(is.na(x[j]) & j < length(x)) {
j = j + 1
}
for (i in (j + 6): length(x)) {
rs[i] = sum(x[(i-6): i])
}
return(rs)
}
shift_n = function(x, n) {
m = length(x)
shifted_x = rep(NA, m)
if (n > 0) {
shifted_x[1:(m - n)] = x[(n+1):m]
} else {
shifted_x[-1:n] = x[1:(m+n)]
}
return(shifted_x)
}
data = data %>%
group_by(region) %>%
mutate(new_rs = rs7(new_cases),
rsf7 = rs7(shift_n(new_cases, 7)),
rsp1 = rs7(shift_n(new_cases, -1)),
rsp2 = rs7(shift_n(new_cases, -2)),
rsp3 = rs7(shift_n(new_cases, -3)),
rsp4 = rs7(shift_n(new_cases, -4)),
rsp5 = rs7(shift_n(new_cases, -5)),
rsp6 = rs7(shift_n(new_cases, -6)),
rsp7 = rs7(shift_n(new_cases, -7)))
data = data.table(data)
# PCA
names(data)
mobility <- names(data)[9:14]
cases <- c("rsf7", grep("rsp", names(data), value=T))
ids <- which(apply(!is.na(data[,..mobility]),1,all))
pca_mobility <- princomp(data[ids,..mobility], cor = T)
plot(pca_mobility)
pca_mobility$loadings
cumsum(pca_mobility$sdev/sum(pca_mobility$sdev))
cumsum(pca_mobility$sdev^2/sum(pca_mobility$sdev^2))
data[ids, pca1 := pca_mobility$scores[,1]]
data[ids, pca2 := pca_mobility$scores[,2]]
data[ids, pca3 := pca_mobility$scores[,3]]
data[ids, pca4 := pca_mobility$scores[,4]]
data2 <- data
# Formula (note: no population density variable)
formula <- rsf7 ~ log(new_rs):region + (pca1 + pca2 + pca3)
id <- which(apply(!is.na(cbind(data2[,..mobility],data2[,..cases])), 1, all) &
data2[,rsf7 > 0] & data2[,new_rs > 0])
data4 <- data2[id,]
# Model
nb_mod <- gam(formula, data4, family = poisson(link="log"))
summary(nb_mod)
# Model
nb_mod <- gam(formula, data4, family = nb(link="log"))
summary(nb_mod)
gam.check(nb_mod)
# PCA
names(data)
mobility <- names(data)[8:13]
cases <- c("rsf7", grep("rsp", names(data), value=T))
ids <- which(apply(!is.na(data[,..mobility]),1,all))
pca_mobility <- princomp(data[ids,..mobility], cor = T)
plot(pca_mobility)
pca_mobility$loadings
cumsum(pca_mobility$sdev/sum(pca_mobility$sdev))
cumsum(pca_mobility$sdev^2/sum(pca_mobility$sdev^2))
data[ids, pca1 := pca_mobility$scores[,1]]
data[ids, pca2 := pca_mobility$scores[,2]]
data[ids, pca3 := pca_mobility$scores[,3]]
data[ids, pca4 := pca_mobility$scores[,4]]
data2 <- data
# Formula (note: no population density variable)
formula <- rsf7 ~ log(new_rs):region + (pca1 + pca2 + pca3)
id <- which(apply(!is.na(cbind(data2[,..mobility],data2[,..cases])), 1, all) &
data2[,rsf7 > 0] & data2[,new_rs > 0])
data4 <- data2[id,]
# Model
nb_mod <- gam(formula, data4, family = nb(link="log"))
summary(nb_mod)
# Model
nb_mod <- gam(formula, data4, family = poisson(link="log"))
summary(nb_mod)
gam.check(nb_mod)
# Model
nb_mod <- gam(formula, data4, family = nb(link="log"))
summary(nb_mod)
gam.check(nb_mod)
# Model
nb_mod <- gam(formula, data4, family = quasipoisson(link="log"))
summary(nb_mod)
gam.check(nb_mod)
# Model
nb_mod <- gam(formula, data4, family = poisson(link="log"))
summary(nb_mod)
gam.check(nb_mod)
# Model
nb_mod <- gam(formula, data4, family = nb(link="identity"))
summary(nb_mod)
gam.check(nb_mod)
# Model
nb_mod <- gam(formula, data4, family = nb(link="log"))
summary(nb_mod)
gam.check(nb_mod)
library(ggplot2)
library(data.table)
library(mgcv)
library(dplyr)
#path = file.path("..", "Datasets", "full_data.csv")
path = file.path("full_data_case_rep.csv")
data = read.csv(path)
data$date = as.Date(data$date)
colnames(data)
# create 7-day rolling sum of new cases
rs7 = function(x) {
rs = rep(NA, length(x))
j = 1
while(is.na(x[j]) & j < length(x)) {
j = j + 1
}
for (i in (j + 6): length(x)) {
rs[i] = sum(x[(i-6): i])
}
return(rs)
}
shift_n = function(x, n) {
m = length(x)
shifted_x = rep(NA, m)
if (n > 0) {
shifted_x[1:(m - n)] = x[(n+1):m]
} else {
shifted_x[-1:n] = x[1:(m+n)]
}
return(shifted_x)
}
data = data %>%
group_by(region) %>%
mutate(new_rs = rs7(new_cases),
rsf7 = rs7(shift_n(new_cases, 7)),
rsp1 = rs7(shift_n(new_cases, -1)),
rsp2 = rs7(shift_n(new_cases, -2)),
rsp3 = rs7(shift_n(new_cases, -3)),
rsp4 = rs7(shift_n(new_cases, -4)),
rsp5 = rs7(shift_n(new_cases, -5)),
rsp6 = rs7(shift_n(new_cases, -6)),
rsp7 = rs7(shift_n(new_cases, -7)))
data = data.table(data)
# PCA
names(data)
mobility <- names(data)[8:13]
cases <- grep("rs", names(data), value=T)
ids <- which(apply(!is.na(data[,..mobility]),1,all))
pca_mobility <- princomp(data[ids,..mobility], cor = T)
plot(pca_mobility)
pca_mobility$loadings
data[ids, pca1 := pca_mobility$scores[,1]]
# Formula
formula <- rsf7 ~ s(new_rs, k = 6) + s(rsp2, k = 6) + s(rsp4, k = 6) + s(rsp6, k = 6) +
s(rsp7, k = 6) + population:pca1 + population:pca2 + region
id <- which(apply(!is.na(cbind(data[,..mobility],data[,..cases])), 1, all))
data2 <- data[id,]
# Model
nb_mod <- gam(formula, data2, family = nb(link="identity"))
# PCA
names(data)
mobility <- names(data)[8:13]
cases <- grep("rs", names(data), value=T)
ids <- which(apply(!is.na(data[,..mobility]),1,all))
pca_mobility <- princomp(data[ids,..mobility], cor = T)
plot(pca_mobility)
pca_mobility$loadings
data[ids, pca1 := pca_mobility$scores[,1]]
data[ids, pca2 := pca_mobility$scores[,2]]
# Formula
formula <- rsf7 ~ s(new_rs, k = 6) + s(rsp2, k = 6) + s(rsp4, k = 6) + s(rsp6, k = 6) +
s(rsp7, k = 6) + population:pca1 + population:pca2 + region
id <- which(apply(!is.na(cbind(data[,..mobility],data[,..cases])), 1, all))
data2 <- data[id,]
# Model
nb_mod <- gam(formula, data2, family = nb(link="identity"))
summary(nb_mod)
library(ggplot2)
library(data.table)
library(mgcv)
library(dplyr)
path = file.path("..", "Datasets", "full_data.csv")
#path = file.path("full_data_case_rep.csv")
data = read.csv(path)
data$date = as.Date(data$date)
colnames(data)
# create 7-day rolling sum of new cases
rs7 = function(x) {
rs = rep(NA, length(x))
j = 1
while(is.na(x[j]) & j < length(x)) {
j = j + 1
}
for (i in (j + 6): length(x)) {
rs[i] = sum(x[(i-6): i])
}
return(rs)
}
shift_n = function(x, n) {
m = length(x)
shifted_x = rep(NA, m)
if (n > 0) {
shifted_x[1:(m - n)] = x[(n+1):m]
} else {
shifted_x[-1:n] = x[1:(m+n)]
}
return(shifted_x)
}
data = data %>%
group_by(region) %>%
mutate(new_rs = rs7(new_cases),
rsf7 = rs7(shift_n(new_cases, 7)),
rsp1 = rs7(shift_n(new_cases, -1)),
rsp2 = rs7(shift_n(new_cases, -2)),
rsp3 = rs7(shift_n(new_cases, -3)),
rsp4 = rs7(shift_n(new_cases, -4)),
rsp5 = rs7(shift_n(new_cases, -5)),
rsp6 = rs7(shift_n(new_cases, -6)),
rsp7 = rs7(shift_n(new_cases, -7)))
data = data.table(data)
# PCA
names(data)
mobility <- names(data)[8:13]
cases <- grep("rs", names(data), value=T)
ids <- which(apply(!is.na(data[,..mobility]),1,all))
pca_mobility <- princomp(data[ids,..mobility], cor = T)
plot(pca_mobility)
pca_mobility$loadings
data[ids, pca1 := pca_mobility$scores[,1]]
data[ids, pca2 := pca_mobility$scores[,2]]
# Formula
formula <- rsf7 ~ s(new_rs, k = 6) + s(rsp2, k = 6) + s(rsp4, k = 6) + s(rsp6, k = 6) +
s(rsp7, k = 6) + population:pca1 + population:pca2 + region
id <- which(apply(!is.na(cbind(data[,..mobility],data[,..cases])), 1, all))
data2 <- data[id,]
# Model
nb_mod <- gam(formula, data2, family = nb(link="identity"))
summary(nb_mod)
# Formula
formula <- rsf7 ~ s(new_rs, k = 6) + s(rsp2, k = 6) + s(rsp4, k = 6) + s(rsp6, k = 6) +
s(rsp7, k = 6) + region:pca1 + region:pca2
id <- which(apply(!is.na(cbind(data[,..mobility],data[,..cases])), 1, all))
data2 <- data[id,]
# Model
nb_mod <- gam(formula, data2, family = nb(link="identity"))
summary(nb_mod)
# check diagnostics
gam.check(nb_mod)
